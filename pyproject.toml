[build-system]
requires = ["hatchling >= 1.13.0"]
build-backend = "hatchling.build"

[project]
name = "yak-server"
description = "Football bet rest/graphql server"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [{name = "Guillaume Le Pape", email = "gui.lepape25@gmail.com"}]
keywords = ["mysql", "api", "rest", "graphql"]
classifiers = [
    "Operating System :: Unix",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "License :: OSI Approved :: MIT License",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Database",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "PyJWT >=2.6.0,<3.0.0",
    "PyMySQL[rsa] >=1.0.2,<2.0.0",
    "argon2-cffi >=21.3.0,<24.0.0",
    "fastapi >=0.95.1,<0.106.0",
    "typer ==0.9.0",
    "sqlalchemy >=2.0.19,<3.0.0",
    "sqlalchemy-utils ==0.41.1",
    "pendulum >=2.1.2",
    "pydantic-settings >=2.0.3",
    "strawberry-graphql >=0.168.1,<0.217.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/yak-toto/yak-server"
Repository = "https://github.com/yak-toto/yak-server"

[project.optional-dependencies]
all = [
    "beautifulsoup4[lxml] ==4.12.2",
    "yappi >=1.5.1",
    "alembic >=1.10.3,<2.0.0",
]

[project.scripts]
yak = "yak_server.cli:app"

[tool.hatch.version]
path = "yak_server/__init__.py"

[tool.hatch.build]
include = ["yak_server", "alembic.ini"]

[tool.black]
line-length = 100
target-version = ['py37']
preview = true

[tool.coverage.run]
branch = "true"

[tool.coverage.report]
omit = ["./yak_server/database/migrations/*"]
exclude_lines = ["if TYPE_CHECKING:", "pragma: no cover"]

[tool.ruff]
line-length = 100
select = ["ALL"]
target-version = "py37"
ignore = [
    "D",
    "ANN101",  # missing annotation for self?
    "ANN002",
    "ANN003",
    "ANN102",
    "ANN202",
    # shadowing builtins
    "A002",
    "A003",
    "PLR",
    "G004",
    "FA100",
    "COM812",
    "ISC001",
]
fix = true
src = ["yak_server", "tests"]

[tool.ruff.per-file-ignores]
"yak_server/cli/*" = ["T20"]
"yak_server/database/migrations/*" = ["ANN001", "ANN201"]
"yak_server/helpers/errors.py" = ["S105"]
"tests/*" = ["S101"]
"scripts/*" = ["T201"]

[tool.ruff.isort]
known-first-party = ["yak_server"]

[tool.pytest.ini_options]
log_file = "yak_test.log"
# log_file_format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
log_file_level = "INFO"
env = [
    "MYSQL_DB=yak_toto_test",
    "PROFILING=0",
]

[tool.importlinter]
root_package = "yak_server"

[[tool.importlinter.contracts]]
name = "yak_server.database should not import other yak_server modules"
type = "independence"
modules = ["yak_server.database"]

[[tool.importlinter.contracts]]
name = "yak_server.helpers should not import yak_server.{v1,v2,cli}"
type = "forbidden"
source_modules = ["yak_server.helpers"]
forbidden_modules = ["yak_server.v1", "yak_server.v2", "yak_server.cli"]

[[tool.importlinter.contracts]]
name = "yak_server.v1.helpers should not import yak_server.v1.models and yak_server.v1.routers"
type = "forbidden"
source_modules = ["yak_server.v1.helpers"]
forbidden_modules = ["yak_server.v1.models", "yak_server.v1.routers"]

[[tool.importlinter.contracts]]
name = "yak_server.v1 and yak_server.v2 should be independent"
type = "independence"
modules = ["yak_server.v1", "yak_server.v2"]
