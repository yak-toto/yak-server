name: ðŸ†™ Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: Release type
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.10"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install hatch
        run: uv tool install hatchling

      - name: Create commits
        id: create-commits
        run: |
          git config user.name 'yak-toto'
          git config user.email 'yaktoto648@gmail.com'
          CURRENT_VERSION=`hatchling version`
          export NEW_VERSION=`python -W ignore -m scripts.compute_new_version $CURRENT_VERSION ${{ github.event.inputs.release-type }}`
          sed -i 's/__version__ = ".*"/__version__ = "'"$NEW_VERSION"'"/g' yak_server/__init__.py
          git add yak_server/__init__.py
          git commit -m "Release "$NEW_VERSION
          git tag -a $NEW_VERSION HEAD -m \"$NEW_VERSION\"
          echo "new-version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Push
        uses: ad-m/github-push-action@master
        with:
          tags: true

      - name: Checkout code
        run: git checkout ${{ steps.create-commits.outputs.new-version }}

      - name: Build distribution
        run: uv build

      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          generateReleaseNotes: true
          tag: ${{ steps.create-commits.outputs.new-version }}
