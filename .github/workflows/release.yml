name: üÜô Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: Release type
        options:
          - patch
          - minor
          - major

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      id-token: write # <-- Required for publishing to PyPI
      contents: write # <-- Enables push

    env:
      python-version: "3.13"

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          python-version: ${{ env.python-version }}
          enable-cache: false

      - name: Create commits
        id: create-commits
        run: |
          git config user.name 'yak-toto'
          git config user.email 'yaktoto648@gmail.com'
          uv version --bump "${GITHUB_EVENT_INPUTS_RELEASE_TYPE}"
          NEW_VERSION=$(uv version --short)
          uv lock
          git add pyproject.toml uv.lock
          git commit -m "Release ${NEW_VERSION}"
          git tag -a "${NEW_VERSION}" HEAD -m \""${NEW_VERSION}"\"
          echo "new-version=${NEW_VERSION}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_EVENT_INPUTS_RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: Push
        uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa # v1
        with:
          tags: true

      - name: Checkout code
        run: git checkout "${STEPS_CREATE_COMMITS_OUTPUTS_NEW_VERSION}"
        env:
          STEPS_CREATE_COMMITS_OUTPUTS_NEW_VERSION: ${{ steps.create-commits.outputs.new-version }}

      - name: Build distribution
        run: uv build

      - name: Publish
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0

      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          artifacts: "dist/*"
          generateReleaseNotes: true
          tag: ${{ steps.create-commits.outputs.new-version }}

      - name: Send Release Notification to Telegram
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          RELEASE_TAG: ${{ steps.create-commits.outputs.new-version }}
          RELEASE_URL: ${{ steps.create-release.outputs.html_url }}
          REPO: ${{ github.repository }}
        run: |-
          FULL_MESSAGE="üéâ New Release: ${RELEASE_TAG}
          üìÅ Repository: ${REPO}
          üì¶ PyPI: https://pypi.org/project/yak-server/${RELEASE_TAG}/
          üîó ${RELEASE_URL}"

          curl -s -o /dev/null -S -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"text\": \"${FULL_MESSAGE}\",
              \"disable_web_page_preview\": true
            }"
