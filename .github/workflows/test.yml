name: ðŸ”‚ Unit tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "yak_server/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/test.yml"

jobs:
  unit-tests:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql database: 'yak_toto_test'
          mysql user: ${{ secrets.MYSQL_USER_NAME }}
          mysql root password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Install poetry
        run: pipx install poetry

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Using python environment
        run: poetry env use ${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install --without pre_commit

      - name: Run test
        env:
          MYSQL_USER_NAME: ${{ secrets.MYSQL_USER_NAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run:
          poetry run pytest --cov=yak_server --cov-report=xml -vv
        if: ${{ always() }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ always() }}
        with:
          fail_ci_if_error: true
          verbose: true
