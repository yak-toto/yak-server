name: ðŸ”‚ Unit tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "yak_server/**"
      - "tests/**"
      - "pyproject.toml"
      - ".github/workflows/test.yml"

jobs:
  unit-tests:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12.0-rc.1"]

    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "8.0"
          mysql database: "yak_toto_test"
          mysql user: ${{ secrets.MYSQL_USER_NAME }}
          mysql root password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements-tests.txt') }}-test-v03

      - name: Install dependencies
        run: pip install -r requirements-tests.txt

      - name: Run test
        env:
          MYSQL_USER_NAME: ${{ secrets.MYSQL_USER_NAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: pytest --cov=yak_server --cov=scripts --cov-report=xml --cov-config=pyproject.toml -vv
        if: ${{ always() }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ always() }}
        with:
          fail_ci_if_error: true
          verbose: true
